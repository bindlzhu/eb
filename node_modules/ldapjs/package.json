{
  "author": {
    "name": "Mark Cavage",
    "email": "mcavage@gmail.com"
  },
  "contributors": [
    {
      "name": "Craig Baker"
    },
    {
      "name": "Austin King",
      "email": "shout@ozten.com"
    },
    {
      "name": "Mathieu Lecarme",
      "email": "mathieu@garambrogne.net"
    },
    {
      "name": "Trent Mick",
      "email": "trentm@gmail.com"
    },
    {
      "name": "Yunong Xiao",
      "email": "yunong@joyent.com"
    },
    {
      "name": "Denis Vuyka",
      "email": "denis.vuyka@gmail.com"
    },
    {
      "name": "Pedro PalazÃ³n",
      "email": "kusorbox@gmail.com"
    },
    {
      "name": "Patrick Mooney",
      "email": "patrick.f.mooney@gmail.com"
    },
    {
      "name": "Matt Simerson",
      "email": "matt@tnpi.net"
    }
  ],
  "name": "ldapjs",
  "homepage": "http://ldapjs.org",
  "description": "LDAP client and server APIs",
  "version": "0.7.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/mcavage/node-ldapjs.git"
  },
  "main": "lib/index.js",
  "directories": {
    "bin": "./bin",
    "lib": "./lib"
  },
  "engines": {
    "node": ">=0.8"
  },
  "dependencies": {
    "asn1": "0.2.2",
    "assert-plus": "0.1.5",
    "bunyan": "1.3.3",
    "dashdash": "1.7.3",
    "backoff": "2.4.1",
    "ldap-filter": "0.2.1",
    "once": "1.3.1",
    "vasync": "1.6.2",
    "verror": "1.6.0",
    "dtrace-provider": "0.4.0"
  },
  "optionalDependencies": {
    "dtrace-provider": "0.4.0"
  },
  "devDependencies": {
    "node-uuid": "1.4.0",
    "faucet": "0.0.1",
    "istanbul": "0.3.0",
    "tape": "2.13.3"
  },
  "scripts": {
    "report": "istanbul report html && open ./coverage/lcov-report/index.html",
    "test": "istanbul cover --print none test/test.js | ./node_modules/.bin/faucet"
  },
  "bin": {
    "ldapjs-add": "bin/ldapjs-add",
    "ldapjs-compare": "bin/ldapjs-compare",
    "ldapjs-delete": "bin/ldapjs-delete",
    "ldapjs-modify": "bin/ldapjs-modify",
    "ldapjs-search": "bin/ldapjs-search"
  },
  "gitHead": "19f2c167839fc9cfb46fdb8ee1ef5275100fd578",
  "readme": "# LDAPjs\n\n[!['Build status'][travis_image_url]][travis_page_url]\n\n[travis_image_url]: https://api.travis-ci.org/mcavage/node-ldapjs.svg\n[travis_page_url]: https://travis-ci.org/mcavage/node-ldapjs\n\nLDAPjs makes the LDAP protocol a first class citizen in Node.js.\n\n## Usage\n\nFor full docs, head on over to <http://ldapjs.org>.\n\n```javascript\nvar ldap = require('ldapjs');\n\nvar server = ldap.createServer();\n\nserver.search('dc=example', function(req, res, next) {\n  var obj = {\n    dn: req.dn.toString(),\n    attributes: {\n      objectclass: ['organization', 'top'],\n      o: 'example'\n    }\n  };\n\n  if (req.filter.matches(obj.attributes))\n  res.send(obj);\n\n  res.end();\n});\n\nserver.listen(1389, function() {\n  console.log('ldapjs listening at ' + server.url);\n});\n```\n\nTo run that, assuming you've got the [OpenLDAP](http://www.openldap.org/) client\non your system:\n\n    ldapsearch -H ldap://localhost:1389 -x -b dc=example objectclass=*\n\n## Installation\n\n    npm install ldapjs\n\n## Formatting objectGUID attribute value\n\n```javascript\nvar ldap = require('ldapjs');\n\nldap.Attribute.settings.guid_format = ldap.GUID_FORMAT_B;\n\nvar client = ldap.createClient({\n  url: 'ldap://127.0.0.1/CN=test,OU=Development,DC=Home'\n});\n\nvar opts = {\n  filter: '(objectclass=user)',\n  scope: 'sub',\n  attributes: ['objectGUID']\n};\n\nclient.bind('username', 'password', function (err) {\n  client.search('CN=test,OU=Development,DC=Home', opts, function (err, search) {\n    search.on('searchEntry', function (entry) {\n      var user = entry.object;\n      console.log(user.objectGUID);\n    });\n  });\n});\n```\n\n_Note: for the sake of simplicity all checks and error handling was removed from the sample above._\n\nThe console output may be similar to the following (depending on the amount of users in the directory):\n\n    {a7667bb1-4aee-48ce-9d9d-a1193550deba}\n    {8d642ac8-14c6-4f27-ac5-94d39833da88}\n\nAvailable formatting modes:\n\n    GUID_FORMAT_N\n        N specifier, 32 digits:\n        00000000000000000000000000000000\n    GUID_FORMAT_D\n        D specifier, 32 digits separated by hypens:\n        00000000-0000-0000-0000-000000000000\n    GUID_FORMAT_B\n        B specifier, 32 digits separated by hyphens, enclosed in braces:\n        {00000000-0000-0000-0000-000000000000}\n    GUID_FORMAT_P\n        P speficier, 32 digits separated by hyphens, enclosed in parentheses:\n        (00000000-0000-0000-0000-000000000000)\n    GUID_FORMAT_X\n        X speficier, four hexadecimal values enclosed in braces,\n        where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:\n        {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}\n\nGUID formatting is unobtrusive by default. You should explicitly define formatting mode in order to enable it.\n\n## License\n\nMIT.\n\n## Bugs\n\nSee <https://github.com/mcavage/node-ldapjs/issues>.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mcavage/node-ldapjs/issues"
  },
  "_id": "ldapjs@0.7.1",
  "_shasum": "339c8e761cfeedfeb4f6fcc0538c2073081c45bb",
  "_from": "git://github.com/mcavage/node-ldapjs.git",
  "_resolved": "git://github.com/mcavage/node-ldapjs.git#19f2c167839fc9cfb46fdb8ee1ef5275100fd578",
  "_fromGithub": true
}
